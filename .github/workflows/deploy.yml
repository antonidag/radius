name: Deploy Integration

on:
  workflow_call:
    inputs:
      integration_id:
        required: true
        type: string
        description: "Integration ID, e.g. int2001"
      environment:
        required: true
        type: string
        description: "Deployment environment, e.g. prod"
      commit_sha:
        required: true
        type: string
        description: "Commit SHA of the build to deploy"

permissions:
  contents: write
  packages: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GHCR: ghcr.io/${{ github.repository_owner }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ inputs.integration_id }}
      SHA: ${{ inputs.commit_sha }}
      ENVIRONMENT: ${{ inputs.environment }}

    steps:
      - name: Install yq (YAML parser)
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull and extract integration.zip from image :sha
        run: |
          container_id=$(docker create $IMAGE:$SHA)
          docker cp $container_id:/artifact/integration.zip ./integration.zip
          docker rm $container_id
          unzip -o integration.zip -d integration_artifact

      - name: Inspect extracted files
        run: ls -R integration_artifact

      - name: Detect deployment types by folder/file presence
        id: detect_types
        run: |
          if [ -d integration_artifact/iac ]; then 
            echo "deploy_iac=true" >> $GITHUB_OUTPUT
            if [ -f integration_artifact/iac/main.tf ]; then
              echo "has_main_tf=true" >> $GITHUB_OUTPUT
            else
              echo "has_main_tf=false" >> $GITHUB_OUTPUT
            fi
            if [ -f integration_artifact/iac/post.tf ]; then
              echo "deploy_postdeploy=true" >> $GITHUB_OUTPUT
            else
              echo "deploy_postdeploy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "deploy_iac=false" >> $GITHUB_OUTPUT
            echo "has_main_tf=false" >> $GITHUB_OUTPUT
            echo "deploy_postdeploy=false" >> $GITHUB_OUTPUT
          fi

          if [ -d integration_artifact/logicapp ]; then
            echo "deploy_logicapp=true" >> $GITHUB_OUTPUT
          else
            echo "deploy_logicapp=false" >> $GITHUB_OUTPUT
          fi

          if [ -d integration_artifact/funcapp ]; then
            echo "deploy_funcapp=true" >> $GITHUB_OUTPUT
          else
            echo "deploy_funcapp=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy infrastructure (IaC)
        if: steps.detect_types.outputs.deploy_iac == 'true'
        run: |
          echo "Deploying Terraform/Bicep/IaC..."
          # Add your IaC deployment commands here

      - name: Deploy Logic App code
        if: steps.detect_types.outputs.deploy_logicapp == 'true'
        run: |
          echo "Deploying Logic App code..."
          # Add your Logic App deploy commands here

      - name: Deploy Function App code
        if: steps.detect_types.outputs.deploy_funcapp == 'true'
        run: |
          echo "Deploying Function App code..."
          # Add your Function App deploy commands here

      - name: Post-deployment steps (Terraform post.tf)
        if: steps.detect_types.outputs.deploy_postdeploy == 'true'
        run: |
          echo "Running post-deployment scripts (post.tf)..."
          # Add your post deployment commands here

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v-${{ inputs.integration_id }}-${{ inputs.commit_sha }}
          name: "Integration: ${{ inputs.integration_id }}"
          body: |
            ## Integration: ${{ inputs.integration_id }}
            - **Environment:** `${{ inputs.environment }}`
            - **Commit SHA:** `${{ inputs.commit_sha }}`
            - **Deployed by:** @${{ github.actor }}
            - **Package:** [View Container](https://github.com/users/${{ github.repository_owner }}/packages/container/${{ inputs.integration_id }})
