name: Deploy Integration

on:
  workflow_call:
    inputs:
      integration_id:
        required: true
        type: string
        description: "Integration ID, e.g. int2001"
      environment:
        required: true
        type: string
        description: "Deployment environment, e.g. prod"
      commit_sha:
        required: true
        type: string
        description: "Commit SHA of the build to deploy"

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      GHCR: ghcr.io/${{ github.repository_owner }}
      IMAGE: ghcr.io/${{ github.repository_owner }}/${{ inputs.integration_id }}
      SHA: ${{ inputs.commit_sha }}
      ENVIRONMENT: ${{ inputs.environment }}

    steps:

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull and extract integration.zip from image :sha
        run: |
          container_id=$(docker create $IMAGE:$SHA)
          docker cp $container_id:/artifact/integration.zip ./integration.zip
          docker rm $container_id
          unzip -o integration.zip -d integration_artifact

      - name: Inspect extracted files
        run: ls -R integration_artifact

      - name: Detect deployment types by folder/file presence
        id: detect_types
        run: |
          BASE_DIR="integration_artifact/${{ inputs.integration_id }}"

          if [ -d "$BASE_DIR/iac" ]; then 
            echo "deploy_iac=true" >> $GITHUB_OUTPUT
            if [ -f "$BASE_DIR/iac/main.tf" ]; then
              echo "has_main_tf=true" >> $GITHUB_OUTPUT
            else
              echo "has_main_tf=false" >> $GITHUB_OUTPUT
            fi
            if [ -f "$BASE_DIR/iac/post.tf" ]; then
              echo "deploy_postdeploy=true" >> $GITHUB_OUTPUT
            else
              echo "deploy_postdeploy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "deploy_iac=false" >> $GITHUB_OUTPUT
            echo "has_main_tf=false" >> $GITHUB_OUTPUT
            echo "deploy_postdeploy=false" >> $GITHUB_OUTPUT
          fi

          if [ -d "$BASE_DIR/logicapp" ]; then
            echo "deploy_logicapp=true" >> $GITHUB_OUTPUT
          else
            echo "deploy_logicapp=false" >> $GITHUB_OUTPUT
          fi

          if [ -d "$BASE_DIR/funcapp" ]; then
            echo "deploy_funcapp=true" >> $GITHUB_OUTPUT
          else
            echo "deploy_funcapp=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy infrastructure (IaC)
        if: steps.detect_types.outputs.deploy_iac == 'true'
        run: |
          echo "Deploying Terraform/Bicep/IaC..."
          # Add your IaC deployment commands here

      - name: Deploy Logic App code
        if: steps.detect_types.outputs.deploy_logicapp == 'true'
        run: |
          echo "Deploying Logic App code..."
          # Add your Logic App deploy commands here

      - name: Deploy Function App code
        if: steps.detect_types.outputs.deploy_funcapp == 'true'
        run: |
          echo "Deploying Function App code..."
          # Add your Function App deploy commands here

      - name: Post-deployment steps (Terraform post.tf)
        if: steps.detect_types.outputs.deploy_postdeploy == 'true'
        run: |
          echo "Running post-deployment scripts (post.tf)..."
          # Add your post deployment commands here
